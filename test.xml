<?xml version="1.0" encoding="utf-8"?>
<rdf:RDF
        xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
        xmlns="http://purl.org/rss/1.0/"
        xmlns:dc="http://purl.org/dc/elements/1.1/">

    <channel rdf:about="https://pecl.php.net">
        <link>https://pecl.php.net</link>
        <dc:creator>php-webmaster@lists.php.net</dc:creator>
        <dc:publisher>php-webmaster@lists.php.net</dc:publisher>
        <dc:language>en-us</dc:language>
        <items>
            <rdf:Seq>

                                    <rdf:li rdf:resource="https://pecl.php.net/package-changelog.php?package=rdkafka&amp;amp;release=6.0.0RC1"/>
                                    <rdf:li rdf:resource="https://pecl.php.net/package-changelog.php?package=rdkafka&amp;amp;release=5.0.1"/>
                                    <rdf:li rdf:resource="https://pecl.php.net/package-changelog.php?package=gRPC&amp;amp;release=1.42.0"/>
                                    <rdf:li rdf:resource="https://pecl.php.net/package-changelog.php?package=swoole&amp;amp;release=4.8.2"/>
                                    <rdf:li rdf:resource="https://pecl.php.net/package-changelog.php?package=imagick&amp;amp;release=3.6.0"/>
                                    <rdf:li rdf:resource="https://pecl.php.net/package-changelog.php?package=phalcon&amp;amp;release=5.0.0alpha7"/>
                                    <rdf:li rdf:resource="https://pecl.php.net/package-changelog.php?package=redis&amp;amp;release=5.3.5RC1"/>
                                    <rdf:li rdf:resource="https://pecl.php.net/package-changelog.php?package=ev&amp;amp;release=1.1.6RC1"/>
                                    <rdf:li rdf:resource="https://pecl.php.net/package-changelog.php?package=imagick&amp;amp;release=3.6.0RC2"/>
                                    <rdf:li rdf:resource="https://pecl.php.net/package-changelog.php?package=imagick&amp;amp;release=3.6.0RC1"/>
                
            </rdf:Seq>
        </items>

        <title>PECL: Latest releases</title>
        <description>The latest releases in PECL.</description>
    </channel>

            <item rdf:about="https://pecl.php.net/package-changelog.php?package=rdkafka&amp;release=6.0.0RC1">
            <title>rdkafka 6.0.0RC1</title>
            <link>https://pecl.php.net/package-changelog.php?package=rdkafka&amp;amp;release=6.0.0RC1</link>
            <description>
                ## Enhancements
- PHP 8.1 support (@ruudk, @remicollet, @nick-zh, @arnaud-lb)

## Breaking changes
- Added tentative return types in PHP 8.1 builds            </description>
            <dc:date>2021-11-19T14:05:06-05:00</dc:date>
        </item>
            <item rdf:about="https://pecl.php.net/package-changelog.php?package=rdkafka&amp;release=5.0.1">
            <title>rdkafka 5.0.1</title>
            <link>https://pecl.php.net/package-changelog.php?package=rdkafka&amp;amp;release=5.0.1</link>
            <description>
                ## Enhancements
- Add pausePartitions(), resumePartitions() on RdKfaka, RdKafka\KafkaConsumer (#438, @arnaud-lb)
- Clarify error when KafkaConsumer is closed (@zoonru)

## Bugfixes
- Fix windows build (#440, @nick-zh)
- Fix crash in RdKafka\Metadata\Topic::getTopic() (#465, @arnaud-lb)            </description>
            <dc:date>2021-11-19T13:57:07-05:00</dc:date>
        </item>
            <item rdf:about="https://pecl.php.net/package-changelog.php?package=gRPC&amp;release=1.42.0">
            <title>gRPC 1.42.0</title>
            <link>https://pecl.php.net/package-changelog.php?package=gRPC&amp;amp;release=1.42.0</link>
            <description>
                - gRPC Core 1.42.0 update            </description>
            <dc:date>2021-11-19T08:11:05-05:00</dc:date>
        </item>
            <item rdf:about="https://pecl.php.net/package-changelog.php?package=swoole&amp;release=4.8.2">
            <title>swoole 4.8.2</title>
            <link>https://pecl.php.net/package-changelog.php?package=swoole&amp;amp;release=4.8.2</link>
            <description>
                - Fixed memory leak of proc_open hook
- Fixed compatibility of curl native hook with PHP-8.0 and PHP-8.1
- Fixed connection cannot be closed normally in the Manager process
- Fixed Manager process cannot use sendMessage
- Fixed Coroutine\Http\Server received abnormally large POST data parsing
- Fixed cannot exit directly when a fatal error occurs in PHP8 environment
- Adjust coroutine max_concurrency option, only allowed to be used in Co::set()
- Adjust Coroutine::join() to ignore non-exists coroutine            </description>
            <dc:date>2021-11-18T01:07:51-05:00</dc:date>
        </item>
            <item rdf:about="https://pecl.php.net/package-changelog.php?package=imagick&amp;release=3.6.0">
            <title>imagick 3.6.0</title>
            <link>https://pecl.php.net/package-changelog.php?package=imagick&amp;amp;release=3.6.0</link>
            <description>
                - No change from 3.6.0RC2            </description>
            <dc:date>2021-11-17T14:52:30-05:00</dc:date>
        </item>
            <item rdf:about="https://pecl.php.net/package-changelog.php?package=phalcon&amp;release=5.0.0alpha7">
            <title>phalcon 5.0.0alpha7</title>
            <link>https://pecl.php.net/package-changelog.php?package=phalcon&amp;amp;release=5.0.0alpha7</link>
            <description>
                Full changelog can be found at: https://github.com/phalcon/cphalcon/blob/master/CHANGELOG-5.0.md

## Changed
- Changes to the `Phalcon\Acl`:
- Renamed `Phalcon\Acl\ComponentAware` to `Phalcon\Acl\ComponentAwareInterface`
- Renamed `Phalcon\Acl\RoleAware` to `Phalcon\Acl\RoleAwareInterface` [#15691](https://github.com/phalcon/cphalcon/issues/15691)
- Changed `require` to `require_once` in `Phalcon\Loader` to avoid conflicts with other loaders [#15489](https://github.com/phalcon/cphalcon/issues/15489)
- Changed `require` to `require_once` in `Phalcon\Cli\Console` and `Phalcon\Mvc\Application` for a bit of extra performance [#15489](https://github.com/phalcon/cphalcon/issues/15489)
- `Phalcon\Collection` has been moved under the `Support` namespace:
- Renamed  `Phalcon\Collection` to `Phalcon\Support\Collection`
- Renamed  `Phalcon\Collection\Exception` to `Phalcon\Support\Collection\Exception`
- Renamed  `Phalcon\Collection\ReadOnly` to `Phalcon\Support\Collection\ReadOnly`
- Renamed  `Phalcon\Collection` to `Phalcon\Support\Collection` [#15700](https://github.com/phalcon/cphalcon/issues/15700)
- Changes to `Phalcon\Session\Bag`:
- Changed `Phalcon\Session\Bag::construct` to accept a container instead of internally calling the default
- Changed `Phalcon\Session\Bag::construct` to throw an exception if the container is not specified
- Changed `Phalcon\Session\Bag::init` to store the data in the session [#15494](https://github.com/phalcon/cphalcon/issues/15494)
- Changed `Phalcon\Events\Event::construct()` to allow `source` to be nullable [#15133](https://github.com/phalcon/cphalcon/issues/15133)
- Changes to `Phalcon\Crypt`
- Moved `Phalcon\Crypt\Exception` to `Phalcon\Crypt\Exception\Exception`
- Moved `Phalcon\Crypt\Mismatch` to `Phalcon\Crypt\Exception\Mismatch`
- Changed the ccm/gcm modes to store the `authTag` with the encryption string and process it with the decryption string [#15717](https://github.com/phalcon/cphalcon/issues/15717)
- Created new namespace `Phalcon\Encryption`
- Moved `Phalcon\Crypt` to `Phalcon\Encryption\Crypt`
- Moved `Phalcon\Security` to `Phalcon\Encryption\Security`
- Moved the whole `Security` namespace under `Encryption`
- `Security\JWT\Exceptions\UnsupportedAlgorithmException` to `Encryption\Security\JWT\Exceptions\UnsupportedAlgorithmException`
- `Security\JWT\Exceptions\ValidatorException` to `Encryption\Security\JWT\Exceptions\ValidatorException`
- `Security\JWT\Signer\AbstractSigner` to `Encryption\Security\JWT\Signer\AbstractSigner`
- `Security\JWT\Signer\Hmac` to `Encryption\Security\JWT\Signer\Hmac`
- `Security\JWT\Signer\None` to `Encryption\Security\JWT\Signer\None`
- `Security\JWT\Signer\SignerInterface` to `Encryption\Security\JWT\Signer\SignerInterface`
- `Security\JWT\Token\AbstractItem` to `Encryption\Security\JWT\Token\AbstractItem`
- `Security\JWT\Token\Enum` to `Encryption\Security\JWT\Token\Enum`
- `Security\JWT\Token\Item` to `Encryption\Security\JWT\Token\Item`
- `Security\JWT\Token\Parser` to `Encryption\Security\JWT\Token\Parser`
- `Security\JWT\Token\Signature` to `Encryption\Security\JWT\Token\Signature`
- `Security\JWT\Token\Token` to `Encryption\Security\JWT\Token\Token`
- `Security\JWT\Builder` to `Encryption\Security\JWT\Builder`
- `Security\JWT\Validator` to `Encryption\Security\JWT\Validator`
- `Security\JWT\Validator` to `Encryption\Security\JWT\Validator`
- `Security\Exception` to `Encryption\Security\Exception`
- `Security\Random` to `Encryption\Security\Random` [#15729](https://github.com/phalcon/cphalcon/issues/15729)
- Renamed
- `Phalcon\Crypt\Crypt::getHashAlgo()` to `Phalcon\Crypt\Crypt::getHashAlgorithm()`
- `Phalcon\Crypt\Crypt::getAvailableHashAlgos()` to `Phalcon\Crypt\Crypt::getAvailableHashAlgorithms()`
- `Phalcon\Crypt\Crypt::setHashAlgo()` to `Phalcon\Crypt\Crypt::setHashAlgorithm()` [#15717](https://github.com/phalcon/cphalcon/issues/15717)
- Renamed `Phalcon\Factory\AdapterFactory::getAdapters()` to `Phalcon\Factory\AdapterFactory::getServices()` [#15717](https://github.com/phalcon/cphalcon/issues/15717)
- Changed `Phalcon\Crypt\Crypt::__construct()` to have `useSigning` set to `true` by default [#15717](https://github.com/phalcon/cphalcon/issues/15717)
- Changes to `Phalcon\Config`
- Moved `Phalcon\Config` to `Phalcon\Config\Config`
- Changed `Phalcon\Config\Config::path` by making the `delimiter` parameter a `string`
- Changed `Phalcon\Config\Adapter\Ini::__construct` to not accept `null` as the mode. The default is now `INI_SCANNER_NORMAL` (2)
- Refactored the code for more efficiency and speed [#15720](https://github.com/phalcon/cphalcon/issues/15720)
- Changed `Phalcon\Db\Adapter\AdapterInterface::getInternalHandler()` and `Phalcon\Db\Adapter\Pdo\AbstractPdo::getInternalHandler()` to return `var` instead of `\PDO` for custom adapters with different engines [#15119](https://github.com/phalcon/cphalcon/issues/15119)
- Moved `Phalcon\Filter` to `Phalcon\Filter\Filter`; added more tests [#15726](https://github.com/phalcon/cphalcon/issues/15726)
- Changed `Phalcon\Mvc\Model::getPreparedQuery()` to return `QueryInterface` instead of `Query` [#15562](https://github.com/phalcon/cphalcon/issues/15562)
- Moved `Phalcon\Cache` to `Phalcon\Cache\Cache` [#15728](https://github.com/phalcon/cphalcon/issues/15728)
- Changed `Phalcon\Factory\AdapterFactory` to define the factory exception in `getExceptionClass()` instead of a property. [#15728](https://github.com/phalcon/cphalcon/issues/15728)
- Renamed `Phalcon\Db\Adapter\AbstractAdapter::getSqlVariables()` to `Phalcon\Db\Adapter\AbstractAdapter::getSQLVariables()` to align with the rest of the `getSQL*` methods [#15637](https://github.com/phalcon/cphalcon/issues/15637)
- Moved `Phalcon\Logger` to `Phalcon\Logger\Logger` [#15727](https://github.com/phalcon/cphalcon/issues/15727)
- Changes to `Phalcon\Escaper`
- Moved `Phalcon\Escaper` to `Phalcon\Html\Escaper`
- Moved `Phalcon\Escaper\EscaperInterface` to `Phalcon\Html\Escaper\EscaperInterface`
- Moved `Phalcon\Escaper\Exception` to `Phalcon\Html\Escaper\Exception`
- Deprecated methods (to be removed at a future version)
- `escapeCss()` becomes `css()`
- `escapeJs()`, becomes `js()`
- `escapeHtml()` becomes `html()`
- `escapeHtmlAttr()` becomes `attributes()`
- `escapeUrl()` becomes `url()`
- `setHtmlQuoteType()` becomes `setFlags()` [#15757](https://github.com/phalcon/cphalcon/issues/15757)
- Changed `Phalcon\Encryption\Security::hash()` to also use `password_hash()` and accept `ARGON2*` algorithms [#15731](https://github.com/phalcon/cphalcon/issues/15731)
- Removed uncamelize of `realClassName` in `Phalcon\Mvc\Router\Route::getRoutePaths()` if definition is string to make processing same as if array definition [#15067](https://github.com/phalcon/cphalcon/issues/15067)
- Changed `Phalcon\Validation::getValue()` behavior to get value from `data` if not found in `entity`. [#14203](https://github.com/phalcon/cphalcon/issues/14203)
- Changed `Phalcon\Forms\Form::isValid()` signature: added `whitelist` argument. [#14203](https://github.com/phalcon/cphalcon/issues/14203)
- Changed `Phalcon\Support\Collection\ReadOnly` to `Phalcon\Support\Collection\ReadOnlyCollection` to avoid conflicts with the read-only feature in PHP 8.1 [#15767](https://github.com/phalcon/cphalcon/issues/15767)
- Removed `Phalcon\Text` - replaced by `Phalcon\Support\Helper\Str\*` [#15776](https://github.com/phalcon/cphalcon/issues/15776)
- Removed `Phalcon\Helper\Arr` - replaced by `Phalcon\Support\Helper\Arr\*` [#15776](https://github.com/phalcon/cphalcon/issues/15776)
- Removed `Phalcon\Helper\File` - replaced by `Phalcon\Support\Helper\File\*` [#15776](https://github.com/phalcon/cphalcon/issues/15776)
- Removed `Phalcon\Helper\Json` - replaced by `Phalcon\Support\Helper\Json\*` [#15776](https://github.com/phalcon/cphalcon/issues/15776)
- Removed `Phalcon\Helper\Number` - replaced by `Phalcon\Support\Helper\Number\*` [#15776](https://github.com/phalcon/cphalcon/issues/15776)
- Removed `Phalcon\Helper\Str` - replaced by `Phalcon\Support\Helper\Str\*` [#15776](https://github.com/phalcon/cphalcon/issues/15776)
- Removed references to `Phalcon\Text`, `Phacon\Helper\*` from the code replacing it with `Phalcon\Support\Helper\*` [#15776](https://github.com/phalcon/cphalcon/issues/15776)
- Synchronized tests with `phalcon/phalcon` thus increasing coverage [#15776](https://github.com/phalcon/cphalcon/issues/15776)
- Changed `Phalcon\Assets\Manager` to require a `Phalcon\Html\TagFactory` in its constructor [#15776](https://github.com/phalcon/cphalcon/issues/15776)

## Added
- Added more tests in the suite for additional code coverage [#15691](https://github.com/phalcon/cphalcon/issues/15691)
- Added `Phalcon\Events\AbstractEventsAware` class to handle the Events Manager when necessary [#15691](https://github.com/phalcon/cphalcon/issues/15691)
- Added `Phalcon\Acl\Adapter\AdapterInterface::getInheritedRoles()` and `Phalcon\Acl\Adapter\Memory::getInheritedRoles()` that returns the inherited roles based on a passed role name (or all if no parameter supplied) [#15154](https://github.com/phalcon/cphalcon/issues/15154)
- Changes to `Phalcon\Crypt`
- Added `Phalcon\Crypt\Padding\PadInteface` and padding adapters
- `Phalcon\Crypt\Padding\Ansi`
- `Phalcon\Crypt\Padding\Iso10126`
- `Phalcon\Crypt\Padding\IsoIek`
- `Phalcon\Crypt\Padding\Noop`
- `Phalcon\Crypt\Padding\PadInterface`
- `Phalcon\Crypt\Padding\Pkcs7`
- `Phalcon\Crypt\Padding\Space`
- `Phalcon\Crypt\Padding\Zero`
- Added `Phalcon\Crypt\PadFactory` to easily create padding adapters
- Added more tests increasing coverage [#15717](https://github.com/phalcon/cphalcon/issues/15717)
- Added `Phalcon\Cache\Adapter\*::setForever()` and `Phalcon\Storage\Adapter\*::setForever()` to allow storing a key forever [#15485](https://github.com/phalcon/cphalcon/issues/15485)
- Added `Phalcon\Encryption\Security::getHashInformation()` to return information for a hash [#15731](https://github.com/phalcon/cphalcon/issues/15731)
- Added constants `Phalcon\Encryption\Security::CRYPT_ARGON2I` and `Phalcon\Encryption\Security::CRYPT_ARGON2ID` [#15731](https://github.com/phalcon/cphalcon/issues/15731)
- Added `allowEmpty` checks to common validators [#15515](https://github.com/phalcon/cphalcon/issues/15515)
- Added `Phalcon\Forms\Form::getFilteredValue()` to get filtered value without providing entity [#15438](https://github.com/phalcon/cphalcon/issues/15438)
- Added `Phalcon\Forms\Form::setWhitelist()` and `Phalcon\Forms\Form::getWhitelist()` [#14203](https://github.com/phalcon/cphalcon/issues/14203)
- Added `dirtyState` serialization in `Phalcon\Mvc\Model` [#15571](https://github.com/phalcon/cphalcon/issues/15571)
- Added short versions of helpers for `Phalcon\Html\TagFactory` (call service as a method) [#15776](https://github.com/phalcon/cphalcon/issues/15776)
- Added short versions of helpers for `Phalcon\Support\HelperFactory` (call service as a method) [#15776](https://github.com/phalcon/cphalcon/issues/15776)
- Added `Phalcon\Html\Helper\Doctype` helper for `doctype` generation [#15776](https://github.com/phalcon/cphalcon/issues/15776)
- Added `style` or `link` tag option for `Phalcon\Html\Helper\Style` [#15776](https://github.com/phalcon/cphalcon/issues/15776)

## Fixed
- Fixed `Query::getExpression()` return type [#15553](https://github.com/phalcon/cphalcon/issues/15553)
- Fixed `Phalcon\Mvc\Model::getRelated()` to correctly return relationships (cached or not) when the foreign key has changed [#15649](https://github.com/phalcon/cphalcon/issues/15649)
- Fixed `Phalcon\Db\Adapter\Pdo\*`, `Phalcon\Mvc\Model` and `Phalcon\Mvc\Model\MetaData\Strategy\Annotations` to treat `BIGINT` numbers as string [#15632](https://github.com/phalcon/cphalcon/issues/15632)
- Fixed `Phalcon\Crypt\Crypt::decrypt()` to correctly calculate the hash when using signed mode [#15717](https://github.com/phalcon/cphalcon/issues/15717)
- Fixed `Phalcon\Mvc\Model\Manager::isVisibleModelProperty()` to correctly check if setting property is visible [#15276](https://github.com/phalcon/cphalcon/issues/15276)
- Fixed `Phalcon\Config\Config::merge` to retain numeric indexes in deep merges [#14705](https://github.com/phalcon/cphalcon/issues/14705)
- Fixed globals (Zephir change) to correctly display string values for global settings in `phpinfo()` [#15269](https://github.com/phalcon/cphalcon/issues/15269)
- Fixed `Phalcon\Storage\Adapter\Redis::getAdapter()` and `Phalcon\Cache\Adapter\Redis::getAdapter()` to accept the connection timeout in the constructor `options` [#15744](https://github.com/phalcon/cphalcon/issues/15744)
- Fixed `Phalcon\Db\Adapter\AbstractAdapter::getSQLVariables()` to return an empty array when initialized [#15637](https://github.com/phalcon/cphalcon/issues/15637)
- Fixed `Phalcon\Cache\Adapter\*` and `Phalcon\Storage\Adapter\*` to delete a key when `set()` is called with a zero or negative TTL [#15485](https://github.com/phalcon/cphalcon/issues/15485)
- Fixed `Phalcon\Db\Adapter\Pdo\Mysql` to not use `PDO::ATTR_EMULATE_PREPARES` and `PDO::ATTR_STRINGIFY_FETCHES` by default. This allows numbers to be returned with resultsets instead of strings for numeric fields [#15361](https://github.com/phalcon/cphalcon/issues/15361)
- Fixed `Phalcon\Validation\Validator\File` to use `messageFileEmpty` [#14928](https://github.com/phalcon/cphalcon/issues/14928)
- Fixed `Phalcon\Db\RawValue` usage bugs in `Phalcon\Mvc\Model::doLowUpdate()` [#15413](https://github.com/phalcon/cphalcon/issues/15413)
- Fixed `type` attribute for stylesheet links [#15776](https://github.com/phalcon/cphalcon/issues/15776)
- Fixed `Phalcon\Debug` to not throw an exception if a URL service is not present [#15381](https://github.com/phalcon/cphalcon/issues/15381)

## Removed
- Removed `Phalcon\Kernel` - obsolete [#15776](https://github.com/phalcon/cphalcon/issues/15776)            </description>
            <dc:date>2021-11-17T08:21:24-05:00</dc:date>
        </item>
            <item rdf:about="https://pecl.php.net/package-changelog.php?package=redis&amp;release=5.3.5RC1">
            <title>redis 5.3.5RC1</title>
            <link>https://pecl.php.net/package-changelog.php?package=redis&amp;amp;release=5.3.5RC1</link>
            <description>
                phpredis 5.3.5RC1

This release adds support for exponential backoff w/jitter, experimental
support for detecting a dirty connection, as well as many other fixes
and improvements.

You can find a detailed list of changes in Changelog.md and package.xml
or by inspecting the git commit logs.

--- Sponsors --- 

Audiomack - https://audiomack.com
Open LMS - https://openlms.net
BlueHost - https://bluehost.com
Object Cache Pro for WordPress - https://objectcache.pro
Avtandil Kikabidze - https://github.com/akalongman
Zaher Ghaibeh - https://github.com/zaherg
BatchLabs - https://batch.com
Luis Zarate - https://github.com/jlzaratec

---

* Fixed segfault in redis_setoption_handler [692e4e84] (Pavlo Yatsukhnenko)
* Fix masters array in the event of a cluster failover [bce692962] (Bar Shaul)
* Fix 32 bit type error [672dec87f] (Remi Collet)
* Fix radix character in certain locales [89a871e24] (Pavlo Yatsukhnenko)
* ZSTD Validation fix [6a77ef5cd] (Michael Grunder)
* Remove superfluous typecast [b2871471f] (Remi Collet)

* Updated documentation [f84168657, d017788e7, 20ac84710, 0adf05260, 
  aee29bf73, 09a095e72, 12ffbf33a, ff331af98, a6bdb8731, 305c15840, 
  1aa10e93a, d78b0c79d, c6d37c27c, a6303f5b9, d144bd2c7, a6fb815ef, 9ef862bc6] 
 (neodisco, Clement Tessier, T. Todua, dengliming, Maxime Cornet, 
  Emanuele Filannino Michael Grunder)

* Travis CI Fixes
  [a43f4586e, 4fde8178f, 7bd5415ac, fdb8c4bb7, d4f407470]
  (Pavlo Yatsukhnenko)

* Minor fixes/cleanup
  [2e190adc1, 99975b592, 9d0879fa5, 22b06457b]
  (Pavlo Yatsukhnenko)

* Fix RedisArray constructor bug
  [85dc883ba](https://github.com/phpredis/phpredis/commit/85dc883ba)
  ([Pavlo Yatsukhnenko](https://github.com/yatsukhnenko))

* Moved to GitHub Actions
  [4d2afa786, 502d09fd5] (Pavlo Yatsukhnenko)

* Use more appropriate array iteration macro
  [6008900c2] (Pavlo Yatsukhnenko)

* Clean up session tests
  [ab25ae7f3] (Michael Grunder)

* RedisArray refactors [1250f0001, 017b2ea7f, 37ed3f079]
  (Pavlo Yatsukhnenko)

* Use zend_parse_parameters_none helper
  [a26b14dbe] (Remi Collet)

* Support for various exponential backoff strategies
  [#1986, #1993, 732eb8dcb, 05129c3a3, 5bba6a7fc],
  (Nathaniel Braun)

* Added experimental support for detecting a dirty connection
  [d68579562] (Michael Grunder)

* Created distinct compression utility methods (pack/unpack)
  [#1939, da2790aec] (Michael Grunder)

* SMISMEMBER Command
  [#1894, ae2382472, ed283e1ab] (Pavlo Yatsukhnenko)            </description>
            <dc:date>2021-11-16T22:19:51-05:00</dc:date>
        </item>
            <item rdf:about="https://pecl.php.net/package-changelog.php?package=ev&amp;release=1.1.6RC1">
            <title>ev 1.1.6RC1</title>
            <link>https://pecl.php.net/package-changelog.php?package=ev&amp;amp;release=1.1.6RC1</link>
            <description>
                Suppressed warnings for UnwindExit and GracefulExit in PHP 8. Thanks to Aaron Piotrowski.            </description>
            <dc:date>2021-11-13T13:48:23-05:00</dc:date>
        </item>
            <item rdf:about="https://pecl.php.net/package-changelog.php?package=imagick&amp;release=3.6.0RC2">
            <title>imagick 3.6.0RC2</title>
            <link>https://pecl.php.net/package-changelog.php?package=imagick&amp;amp;release=3.6.0RC2</link>
            <description>
                - Fixes:
  * Remove deprecated message from Imagick::roundCorners()
- Added:
  * Imagick::addNoiseImageWithAttenuate()            </description>
            <dc:date>2021-11-11T15:06:12-05:00</dc:date>
        </item>
            <item rdf:about="https://pecl.php.net/package-changelog.php?package=imagick&amp;release=3.6.0RC1">
            <title>imagick 3.6.0RC1</title>
            <link>https://pecl.php.net/package-changelog.php?package=imagick&amp;amp;release=3.6.0RC1</link>
            <description>
                - Imagick::getImageInterlaceScheme is undeprecated. It&#039;s the appropriate function to call to get the image interlace setting.
- Image formats are now normalised to lower case.
- Imagick::getImageIndex and Imagick::setImageIndex are undeprecated and work on ImageMagick 7. They call MagickGetIteratorIndex and MagickSetIteratorIndex internally.
- Imagick::averageImages is undeprecated. For IM 7 it now calls EvaluateImages(wand-&gt;images,MeanEvaluateOperator).
- Imagick::flattenImages is undeprecated. For IM 7 it now calls MagickMergeImageLayers(intern-&gt;magick_wand, FlattenLayer); internally.
- Imagick::getImageSize is undeprecated. For IM 7 it now calls MagickGetImageLength internally.
- Imagick::roundCornersImage is undeprecated and available on IM7.
- Fixes:
* Imagick::borderImage() changed internally to use OverCompositeOp rather than AtopCompositeOp for ImageMagick &gt; 7. If you need the old behaviour, please use Imagick::borderImageWithComposite() instead, which allows you to set the composite method.
* Imagick::frameImage() changed internally to use OverCompositeOp rather than AtopCompositeOp for ImageMagick &gt; 7. If you need the old behaviour, please use Imagick::frameImageWithComposite() instead, which allows you to set the composite method.
* Imagick::profileImage() fixed to allow null as second paramter again. If you can&#039;t upgrade to this version yet, pass in &quot;&quot;, which has the same effect.
* Imagick::ALPHACHANNEL_COPY and Imagick::ALPHACHANNEL_OPAQUE should be available on IM7.
* Imagick::setImageMatteColor() should be available on IM7.
- Added:
* Imagick::borderImageWithComposite() same as Imagick::borderImage() but allows user to set composite operator used.
* Imagick::frameImageWithComposite() same as Imagick::frameImage() but allows user to set composite operator used.
* function Imagick::cannyEdgeImage
* function Imagick::setSeed
* function Imagick::waveletDenoiseImage
* function Imagick::meanShiftImage
* function Imagick::kmeansImage
* function Imagick::rangeThresholdImage
* function Imagick::autoThresholdImage
* function Imagick::bilateralBlurImage
* function Imagick::claheImage
* function Imagick::channelFxImage
* function Imagick::colorThresholdImage
* function Imagick::complexImages
* function Imagick::interpolativeResizeImage
* function Imagick::levelImageColors
* function Imagick::levelizeImage
* function Imagick::orderedDitherImage
* function Imagick::whiteBalanceImage            </description>
            <dc:date>2021-11-10T12:23:13-05:00</dc:date>
        </item>
    
</rdf:RDF>
